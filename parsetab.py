
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BREAK CBRACKET CHAR COLON COMA DIFFEQUAL DIVIDE DO DOUBLE DOUBLEMARK ELSE EQUAL EQUALEQUAL EXPONENT FALSE FI FLOAT FOR ID IF INT LEESETHAN LEESTHAN LPAREN MARK MINUS MOREETHAN MORETHAN NOT NUMBER OBRACKET OR PLUS POINT PROGRAM READ RESERVED RPAREN SEMICOLON THEN TIMES TRUE UNTIL WHILE WRITEprogram : PROGRAM OBRACKET statement_list CBRACKET\n               | PROGRAM OBRACKET CBRACKETstatement_list : statement \n                      | statement_list statementstatement : sent_assign\n            |      write_statement\n            |      var_declaration_statement\n            |      if_statement\n            |      iteration_statement\n        do_while_statement : DO OBRACKET statement_list CBRACKET UNTIL LPAREN sent_assign RPARENfor_statement : FOR LPAREN sent_assign sent_assign RPAREN OBRACKET statement_list CBRACKETwhile_statement : WHILE LPAREN sent_assign RPAREN OBRACKET statement_list CBRACKETiteration_statement : for_statement\n                           | while_statement\n                           | do_while_statement if_statement : IF LPAREN sent_assign RPAREN THEN OBRACKET statement_list CBRACKET FI\n                    | IF LPAREN sent_assign RPAREN THEN OBRACKET statement_list CBRACKET ELSE OBRACKET statement_list CBRACKET FIvar_declaration_statement : type_declaration var_list SEMICOLON\n                                | ID var_list SEMICOLONvar_list : ID\n                | ID COMA var_listtype_declaration : INT \n                        | CHAR\n                        | FLOAT\n                        | BOOLwrite_statement : WRITE expr SEMICOLONsent_assign : ID EQUAL exp_bool SEMICOLON\n                   | exp_bool SEMICOLON\n                   | exp_boolexp_bool : exp_bool OR comb\n                | combcomb : comb AND igualdad\n            | igualdadigualdad : igualdad EQUALEQUAL rel\n                | igualdad DIFFEQUAL rel\n                | relrel : expr op_rel expr\n            | exprop_rel : LEESTHAN\n              | MORETHAN\n              | LEESETHAN\n              | MOREETHANexpr : expr MINUS term\n            | expr PLUS term\n            | termterm : term TIMES unario\n            | term DIVIDE unario\n            | unariounario : NOT unario\n              | MINUS unario\n              | factorfactor : LPAREN RPAREN\n              | ID\n              | NUMBER\n              | DOUBLE\n              | TRUE\n              | FALSE'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,41,],[0,-2,-1,]),'OBRACKET':([2,29,93,95,96,111,],[3,63,97,99,100,112,]),'CBRACKET':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,101,103,104,105,108,109,110,113,115,],[5,41,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,94,-34,-35,-46,-47,-27,105,107,108,-12,-11,-10,-16,114,-17,]),'ID':([3,4,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[12,12,-3,-5,-6,-7,-8,-9,43,-29,49,-38,43,-13,-14,-15,-31,-22,-23,-24,-25,-33,-36,49,-45,-48,49,-51,-54,-55,-56,-57,-4,49,-28,49,-53,49,49,49,-39,-40,-41,-42,80,-52,49,80,80,12,49,49,-50,49,49,-49,43,-19,-30,-26,-37,-43,-44,-18,-53,-32,80,12,-34,-35,-46,-47,-27,12,12,12,12,80,12,12,-12,-11,-10,-16,12,12,-17,]),'WRITE':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[14,14,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,14,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,14,-34,-35,-46,-47,-27,14,14,14,14,14,14,-12,-11,-10,-16,14,14,-17,]),'IF':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[17,17,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,17,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,17,-34,-35,-46,-47,-27,17,17,17,17,17,17,-12,-11,-10,-16,17,17,-17,]),'INT':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[23,23,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,23,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,23,-34,-35,-46,-47,-27,23,23,23,23,23,23,-12,-11,-10,-16,23,23,-17,]),'CHAR':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[24,24,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,24,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,24,-34,-35,-46,-47,-27,24,24,24,24,24,24,-12,-11,-10,-16,24,24,-17,]),'FLOAT':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[25,25,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,25,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,25,-34,-35,-46,-47,-27,25,25,25,25,25,25,-12,-11,-10,-16,25,25,-17,]),'BOOL':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[26,26,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,26,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,26,-34,-35,-46,-47,-27,26,26,26,26,26,26,-12,-11,-10,-16,26,26,-17,]),'FOR':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[27,27,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,27,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,27,-34,-35,-46,-47,-27,27,27,27,27,27,27,-12,-11,-10,-16,27,27,-17,]),'WHILE':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[28,28,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,28,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,28,-34,-35,-46,-47,-27,28,28,28,28,28,28,-12,-11,-10,-16,28,28,-17,]),'DO':([3,4,6,7,8,9,10,11,12,13,15,19,20,21,22,30,31,33,34,36,37,38,39,40,42,46,49,59,63,66,69,72,73,74,75,76,77,78,81,84,85,86,87,88,90,97,99,100,101,103,104,105,108,109,110,112,113,115,],[29,29,-3,-5,-6,-7,-8,-9,-53,-29,-38,-13,-14,-15,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-4,-28,-53,-52,29,-50,-49,-19,-30,-26,-37,-43,-44,-18,-32,29,-34,-35,-46,-47,-27,29,29,29,29,29,29,-12,-11,-10,-16,29,29,-17,]),'NOT':([3,4,6,7,8,9,10,11,12,13,14,15,19,20,21,22,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[35,35,-3,-5,-6,-7,-8,-9,-53,-29,35,-38,-13,-14,-15,-31,-33,-36,35,-45,-48,35,-51,-54,-55,-56,-57,-4,35,-28,35,-53,35,35,35,-39,-40,-41,-42,35,-52,35,35,35,35,35,35,-50,35,35,-49,-19,-30,-26,-37,-43,-44,-18,-53,-32,35,35,-34,-35,-46,-47,-27,35,35,35,35,35,35,35,-12,-11,-10,-16,35,35,-17,]),'MINUS':([3,4,6,7,8,9,10,11,12,13,14,15,19,20,21,22,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[32,32,-3,-5,-6,-7,-8,-9,-53,-29,32,51,-13,-14,-15,-31,-33,-36,32,-45,-48,32,-51,-54,-55,-56,-57,-4,32,-28,32,51,-53,32,32,32,-39,-40,-41,-42,32,-52,32,32,32,32,32,32,-50,32,32,-49,-19,-30,-26,51,-43,-44,-18,-53,-32,32,32,-34,-35,-46,-47,-27,32,32,32,32,32,32,32,-12,-11,-10,-16,32,32,-17,]),'LPAREN':([3,4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,27,28,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,98,99,100,101,102,103,104,105,108,109,110,112,113,115,],[18,18,-3,-5,-6,-7,-8,-9,-53,-29,18,-38,58,-13,-14,-15,-31,61,62,-33,-36,18,-45,-48,18,-51,-54,-55,-56,-57,-4,18,-28,18,-53,18,18,18,-39,-40,-41,-42,18,-52,18,18,18,18,18,18,-50,18,18,-49,-19,-30,-26,-37,-43,-44,-18,-53,-32,18,18,-34,-35,-46,-47,-27,18,102,18,18,18,18,18,18,-12,-11,-10,-16,18,18,-17,]),'NUMBER':([3,4,6,7,8,9,10,11,12,13,14,15,19,20,21,22,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[37,37,-3,-5,-6,-7,-8,-9,-53,-29,37,-38,-13,-14,-15,-31,-33,-36,37,-45,-48,37,-51,-54,-55,-56,-57,-4,37,-28,37,-53,37,37,37,-39,-40,-41,-42,37,-52,37,37,37,37,37,37,-50,37,37,-49,-19,-30,-26,-37,-43,-44,-18,-53,-32,37,37,-34,-35,-46,-47,-27,37,37,37,37,37,37,37,-12,-11,-10,-16,37,37,-17,]),'DOUBLE':([3,4,6,7,8,9,10,11,12,13,14,15,19,20,21,22,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[38,38,-3,-5,-6,-7,-8,-9,-53,-29,38,-38,-13,-14,-15,-31,-33,-36,38,-45,-48,38,-51,-54,-55,-56,-57,-4,38,-28,38,-53,38,38,38,-39,-40,-41,-42,38,-52,38,38,38,38,38,38,-50,38,38,-49,-19,-30,-26,-37,-43,-44,-18,-53,-32,38,38,-34,-35,-46,-47,-27,38,38,38,38,38,38,38,-12,-11,-10,-16,38,38,-17,]),'TRUE':([3,4,6,7,8,9,10,11,12,13,14,15,19,20,21,22,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[39,39,-3,-5,-6,-7,-8,-9,-53,-29,39,-38,-13,-14,-15,-31,-33,-36,39,-45,-48,39,-51,-54,-55,-56,-57,-4,39,-28,39,-53,39,39,39,-39,-40,-41,-42,39,-52,39,39,39,39,39,39,-50,39,39,-49,-19,-30,-26,-37,-43,-44,-18,-53,-32,39,39,-34,-35,-46,-47,-27,39,39,39,39,39,39,39,-12,-11,-10,-16,39,39,-17,]),'FALSE':([3,4,6,7,8,9,10,11,12,13,14,15,19,20,21,22,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,97,99,100,101,102,103,104,105,108,109,110,112,113,115,],[40,40,-3,-5,-6,-7,-8,-9,-53,-29,40,-38,-13,-14,-15,-31,-33,-36,40,-45,-48,40,-51,-54,-55,-56,-57,-4,40,-28,40,-53,40,40,40,-39,-40,-41,-42,40,-52,40,40,40,40,40,40,-50,40,40,-49,-19,-30,-26,-37,-43,-44,-18,-53,-32,40,40,-34,-35,-46,-47,-27,40,40,40,40,40,40,40,-12,-11,-10,-16,40,40,-17,]),'EQUAL':([12,80,],[44,44,]),'TIMES':([12,33,34,36,37,38,39,40,49,59,66,69,76,77,80,87,88,],[-53,67,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,67,67,-53,-46,-47,]),'DIVIDE':([12,33,34,36,37,38,39,40,49,59,66,69,76,77,80,87,88,],[-53,68,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,68,68,-53,-46,-47,]),'PLUS':([12,15,33,34,36,37,38,39,40,48,49,59,66,69,75,76,77,80,87,88,],[-53,52,-45,-48,-51,-54,-55,-56,-57,52,-53,-52,-50,-49,52,-43,-44,-53,-46,-47,]),'LEESTHAN':([12,15,33,34,36,37,38,39,40,49,59,66,69,76,77,80,87,88,],[-53,53,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,-43,-44,-53,-46,-47,]),'MORETHAN':([12,15,33,34,36,37,38,39,40,49,59,66,69,76,77,80,87,88,],[-53,54,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,-43,-44,-53,-46,-47,]),'LEESETHAN':([12,15,33,34,36,37,38,39,40,49,59,66,69,76,77,80,87,88,],[-53,55,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,-43,-44,-53,-46,-47,]),'MOREETHAN':([12,15,33,34,36,37,38,39,40,49,59,66,69,76,77,80,87,88,],[-53,56,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,-43,-44,-53,-46,-47,]),'EQUALEQUAL':([12,15,30,31,33,34,36,37,38,39,40,49,59,66,69,75,76,77,80,81,85,86,87,88,],[-53,-38,64,-36,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,-37,-43,-44,-53,64,-34,-35,-46,-47,]),'DIFFEQUAL':([12,15,30,31,33,34,36,37,38,39,40,49,59,66,69,75,76,77,80,81,85,86,87,88,],[-53,-38,65,-36,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,-37,-43,-44,-53,65,-34,-35,-46,-47,]),'AND':([12,15,22,30,31,33,34,36,37,38,39,40,49,59,66,69,73,75,76,77,80,81,85,86,87,88,],[-53,-38,60,-33,-36,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,60,-37,-43,-44,-53,-32,-34,-35,-46,-47,]),'SEMICOLON':([12,13,15,22,30,31,33,34,36,37,38,39,40,43,45,48,49,57,59,66,69,71,73,75,76,77,80,81,85,86,87,88,89,],[-53,46,-38,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-20,72,74,-53,78,-52,-50,-49,90,-30,-37,-43,-44,-53,-32,-34,-35,-46,-47,-21,]),'OR':([12,13,15,22,30,31,33,34,36,37,38,39,40,49,59,66,69,71,73,75,76,77,80,81,85,86,87,88,],[-53,47,-38,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-53,-52,-50,-49,47,-30,-37,-43,-44,-53,-32,-34,-35,-46,-47,]),'RPAREN':([13,15,18,22,30,31,33,34,36,37,38,39,40,46,49,59,66,69,73,75,76,77,79,80,81,83,85,86,87,88,90,92,106,],[-29,-38,59,-31,-33,-36,-45,-48,-51,-54,-55,-56,-57,-28,-53,-52,-50,-49,-30,-37,-43,-44,91,-53,-32,93,-34,-35,-46,-47,-27,96,109,]),'COMA':([43,],[70,]),'THEN':([91,],[95,]),'UNTIL':([94,],[98,]),'FI':([107,114,],[110,115,]),'ELSE':([107,],[111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([3,63,97,99,100,112,],[4,84,101,103,104,113,]),'statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[6,42,6,42,6,6,6,42,42,42,6,42,]),'sent_assign':([3,4,58,61,62,63,82,84,97,99,100,101,102,103,104,112,113,],[7,7,79,82,83,7,92,7,7,7,7,7,106,7,7,7,7,]),'write_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'var_declaration_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'if_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'iteration_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'exp_bool':([3,4,44,58,61,62,63,82,84,97,99,100,101,102,103,104,112,113,],[13,13,71,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expr':([3,4,14,44,47,50,58,60,61,62,63,64,65,82,84,97,99,100,101,102,103,104,112,113,],[15,15,48,15,15,75,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'type_declaration':([3,4,63,84,97,99,100,101,103,104,112,113,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'for_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'while_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'do_while_statement':([3,4,63,84,97,99,100,101,103,104,112,113,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'comb':([3,4,44,47,58,61,62,63,82,84,97,99,100,101,102,103,104,112,113,],[22,22,22,73,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'igualdad':([3,4,44,47,58,60,61,62,63,82,84,97,99,100,101,102,103,104,112,113,],[30,30,30,30,30,81,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'rel':([3,4,44,47,58,60,61,62,63,64,65,82,84,97,99,100,101,102,103,104,112,113,],[31,31,31,31,31,31,31,31,31,85,86,31,31,31,31,31,31,31,31,31,31,31,]),'term':([3,4,14,44,47,50,51,52,58,60,61,62,63,64,65,82,84,97,99,100,101,102,103,104,112,113,],[33,33,33,33,33,33,76,77,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'unario':([3,4,14,32,35,44,47,50,51,52,58,60,61,62,63,64,65,67,68,82,84,97,99,100,101,102,103,104,112,113,],[34,34,34,66,69,34,34,34,34,34,34,34,34,34,34,34,34,87,88,34,34,34,34,34,34,34,34,34,34,34,]),'factor':([3,4,14,32,35,44,47,50,51,52,58,60,61,62,63,64,65,67,68,82,84,97,99,100,101,102,103,104,112,113,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'var_list':([12,16,70,],[45,57,89,]),'op_rel':([15,],[50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM OBRACKET statement_list CBRACKET','program',4,'p_program','intefaz.py',178),
  ('program -> PROGRAM OBRACKET CBRACKET','program',3,'p_program','intefaz.py',179),
  ('statement_list -> statement','statement_list',1,'p_statement_list','intefaz.py',187),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','intefaz.py',188),
  ('statement -> sent_assign','statement',1,'p_statement','intefaz.py',207),
  ('statement -> write_statement','statement',1,'p_statement','intefaz.py',208),
  ('statement -> var_declaration_statement','statement',1,'p_statement','intefaz.py',209),
  ('statement -> if_statement','statement',1,'p_statement','intefaz.py',210),
  ('statement -> iteration_statement','statement',1,'p_statement','intefaz.py',211),
  ('do_while_statement -> DO OBRACKET statement_list CBRACKET UNTIL LPAREN sent_assign RPAREN','do_while_statement',8,'p_do_while_statement','intefaz.py',216),
  ('for_statement -> FOR LPAREN sent_assign sent_assign RPAREN OBRACKET statement_list CBRACKET','for_statement',8,'p_for_statement','intefaz.py',220),
  ('while_statement -> WHILE LPAREN sent_assign RPAREN OBRACKET statement_list CBRACKET','while_statement',7,'p_while_statement','intefaz.py',224),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','intefaz.py',258),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','intefaz.py',259),
  ('iteration_statement -> do_while_statement','iteration_statement',1,'p_iteration_statement','intefaz.py',260),
  ('if_statement -> IF LPAREN sent_assign RPAREN THEN OBRACKET statement_list CBRACKET FI','if_statement',9,'p_if_statement','intefaz.py',264),
  ('if_statement -> IF LPAREN sent_assign RPAREN THEN OBRACKET statement_list CBRACKET ELSE OBRACKET statement_list CBRACKET FI','if_statement',13,'p_if_statement','intefaz.py',265),
  ('var_declaration_statement -> type_declaration var_list SEMICOLON','var_declaration_statement',3,'p_var_declaration_statement','intefaz.py',328),
  ('var_declaration_statement -> ID var_list SEMICOLON','var_declaration_statement',3,'p_var_declaration_statement','intefaz.py',329),
  ('var_list -> ID','var_list',1,'p_var_list','intefaz.py',352),
  ('var_list -> ID COMA var_list','var_list',3,'p_var_list','intefaz.py',353),
  ('type_declaration -> INT','type_declaration',1,'p_type_declaration','intefaz.py',362),
  ('type_declaration -> CHAR','type_declaration',1,'p_type_declaration','intefaz.py',363),
  ('type_declaration -> FLOAT','type_declaration',1,'p_type_declaration','intefaz.py',364),
  ('type_declaration -> BOOL','type_declaration',1,'p_type_declaration','intefaz.py',365),
  ('write_statement -> WRITE expr SEMICOLON','write_statement',3,'p_write_statement','intefaz.py',369),
  ('sent_assign -> ID EQUAL exp_bool SEMICOLON','sent_assign',4,'p_sent_assign','intefaz.py',385),
  ('sent_assign -> exp_bool SEMICOLON','sent_assign',2,'p_sent_assign','intefaz.py',386),
  ('sent_assign -> exp_bool','sent_assign',1,'p_sent_assign','intefaz.py',387),
  ('exp_bool -> exp_bool OR comb','exp_bool',3,'p_exp_bool','intefaz.py',460),
  ('exp_bool -> comb','exp_bool',1,'p_exp_bool','intefaz.py',461),
  ('comb -> comb AND igualdad','comb',3,'p_comb','intefaz.py',514),
  ('comb -> igualdad','comb',1,'p_comb','intefaz.py',515),
  ('igualdad -> igualdad EQUALEQUAL rel','igualdad',3,'p_igualdad','intefaz.py',568),
  ('igualdad -> igualdad DIFFEQUAL rel','igualdad',3,'p_igualdad','intefaz.py',569),
  ('igualdad -> rel','igualdad',1,'p_igualdad','intefaz.py',570),
  ('rel -> expr op_rel expr','rel',3,'p_rel','intefaz.py',724),
  ('rel -> expr','rel',1,'p_rel','intefaz.py',725),
  ('op_rel -> LEESTHAN','op_rel',1,'p_op_rel','intefaz.py',766),
  ('op_rel -> MORETHAN','op_rel',1,'p_op_rel','intefaz.py',767),
  ('op_rel -> LEESETHAN','op_rel',1,'p_op_rel','intefaz.py',768),
  ('op_rel -> MOREETHAN','op_rel',1,'p_op_rel','intefaz.py',769),
  ('expr -> expr MINUS term','expr',3,'p_expr','intefaz.py',773),
  ('expr -> expr PLUS term','expr',3,'p_expr','intefaz.py',774),
  ('expr -> term','expr',1,'p_expr','intefaz.py',775),
  ('term -> term TIMES unario','term',3,'p_term','intefaz.py',840),
  ('term -> term DIVIDE unario','term',3,'p_term','intefaz.py',841),
  ('term -> unario','term',1,'p_term','intefaz.py',842),
  ('unario -> NOT unario','unario',2,'p_unario','intefaz.py',888),
  ('unario -> MINUS unario','unario',2,'p_unario','intefaz.py',889),
  ('unario -> factor','unario',1,'p_unario','intefaz.py',890),
  ('factor -> LPAREN RPAREN','factor',2,'p_factor','intefaz.py',897),
  ('factor -> ID','factor',1,'p_factor','intefaz.py',898),
  ('factor -> NUMBER','factor',1,'p_factor','intefaz.py',899),
  ('factor -> DOUBLE','factor',1,'p_factor','intefaz.py',900),
  ('factor -> TRUE','factor',1,'p_factor','intefaz.py',901),
  ('factor -> FALSE','factor',1,'p_factor','intefaz.py',902),
]
